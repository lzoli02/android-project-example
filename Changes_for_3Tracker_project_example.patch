Index: project_retrofit.app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- project_retrofit.app/build.gradle	(revision 50220e391a06d9d10fdebce6ef7bd31906c9c807)
+++ project_retrofit.app/build.gradle	(revision 82430523b4a3a2edfc9542a3f8e6f2cf8846cd98)
@@ -8,7 +8,7 @@
 
     defaultConfig {
         applicationId "com.zoltanlorinczi.project_retrofit"
-        minSdkVersion 21
+        minSdkVersion 23
         targetSdkVersion 31
         versionCode 1
         versionName "1.0"
Index: project_retrofit.app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- project_retrofit.app/src/main/AndroidManifest.xml	(revision 50220e391a06d9d10fdebce6ef7bd31906c9c807)
+++ project_retrofit.app/src/main/AndroidManifest.xml	(revision 82430523b4a3a2edfc9542a3f8e6f2cf8846cd98)
@@ -1,24 +1,25 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-  package="com.zoltanlorinczi.project_retorfit">
+    package="com.zoltanlorinczi.project_retorfit">
 
-  <uses-permission android:name="android.permission.INTERNET"/>
+    <uses-permission android:name="android.permission.INTERNET" />
 
-  <application
-    android:name="com.zoltanlorinczi.project_retrofit.App"
-    android:allowBackup="true"
-    android:icon="@mipmap/ic_launcher"
-    android:label="@string/app_name"
-    android:roundIcon="@mipmap/ic_launcher_round"
-    android:supportsRtl="true"
-    android:theme="@style/AppTheme">
-    <activity android:name="com.zoltanlorinczi.project_retrofit.MainActivity">
-      <intent-filter>
-        <action android:name="android.intent.action.MAIN"/>
+    <application
+        android:name="com.zoltanlorinczi.project_retrofit.App"
+        android:allowBackup="true"
+        android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name"
+        android:roundIcon="@mipmap/ic_launcher_round"
+        android:supportsRtl="true"
+        android:theme="@style/AppTheme"
+        android:usesCleartextTraffic="true">
+        <activity android:name="com.zoltanlorinczi.project_retrofit.MainActivity">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
 
-        <category android:name="android.intent.category.LAUNCHER"/>
-      </intent-filter>
-    </activity>
-  </application>
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+    </application>
 
 </manifest>
\ No newline at end of file
Index: project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/adapter/MarketDataAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/adapter/MarketDataAdapter.kt	(revision 50220e391a06d9d10fdebce6ef7bd31906c9c807)
+++ project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/adapter/MarketDataAdapter.kt	(revision 82430523b4a3a2edfc9542a3f8e6f2cf8846cd98)
@@ -8,14 +8,14 @@
 import android.widget.TextView
 import androidx.recyclerview.widget.RecyclerView
 import com.zoltanlorinczi.project_retorfit.R
-import com.zoltanlorinczi.project_retrofit.api.model.ProductResponse
+import com.zoltanlorinczi.project_retrofit.api.model.TaskResponse
 
 /**
  * Author:  Zoltan Lorinczi
  * Date:    12/6/2021
  */
 class MarketDataAdapter(
-    private var list: ArrayList<ProductResponse>,
+    private var list: ArrayList<TaskResponse>,
     private val context: Context,
     private val listener: OnItemClickListener,
     private val listener2: OnItemLongClickListener
@@ -68,8 +68,8 @@
         val currentItem = list[position]
 
         holder.textView_name.text = currentItem.title
-        holder.textView_price.text = currentItem.pricePerUnit
-        holder.textView_seller.text = currentItem.username
+        //holder.textView_price.text = currentItem.pricePerUnit
+        //holder.textView_seller.text = currentItem.username
 
 //        Glide.with(this.context)
 //            .load(R.drawable.ic_user)
@@ -80,7 +80,7 @@
     override fun getItemCount() = list.size
 
     // Update the list
-    fun setData(newList: ArrayList<ProductResponse>) {
+    fun setData(newList: ArrayList<TaskResponse>) {
         list = newList
     }
 }
\ No newline at end of file
Index: project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/BackendConstants.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/BackendConstants.kt	(revision 50220e391a06d9d10fdebce6ef7bd31906c9c807)
+++ project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/BackendConstants.kt	(revision 82430523b4a3a2edfc9542a3f8e6f2cf8846cd98)
@@ -9,13 +9,13 @@
     /**
      * Project backend base URL.
      */
-    const val BASE_URL = "https://pure-gorge-51703.herokuapp.com/"
+    const val BASE_URL = "http://tracker-3track.a2hosted.com/"
 
     /**
      * Specific URL segments, which will be concatenated with the base URL.
      */
-    const val LOGIN_URL = "user/login"
-    const val GET_PRODUCT_URL = "products"
+    const val LOGIN_URL = "login"
+    const val GET_TASKS_URL = "task/getTasks"
 
     /**
      * Headers.
Index: project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/RetrofitInstace.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/RetrofitInstace.kt	(revision 50220e391a06d9d10fdebce6ef7bd31906c9c807)
+++ project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/RetrofitInstace.kt	(revision 82430523b4a3a2edfc9542a3f8e6f2cf8846cd98)
@@ -1,6 +1,6 @@
 
 import com.zoltanlorinczi.project_retrofit.api.BackendConstants
-import com.zoltanlorinczi.project_retrofit.api.MarketPlaceApiService
+import com.zoltanlorinczi.project_retrofit.api.UserApiService
 import retrofit2.Retrofit
 import retrofit2.converter.gson.GsonConverterFactory
 
@@ -21,7 +21,7 @@
      * Will not be initialized unless you use it!
      * It is initialized only once. Next time when you use it, you get the value from cache memory.
      */
-    val marketPlaceApiService: MarketPlaceApiService by lazy {
-        retrofit.create(MarketPlaceApiService::class.java)
+    val USER_API_SERVICE: UserApiService by lazy {
+        retrofit.create(UserApiService::class.java)
     }
 }
\ No newline at end of file
Index: project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/MarketPlaceRepository.kt
===================================================================
--- project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/MarketPlaceRepository.kt	(revision 50220e391a06d9d10fdebce6ef7bd31906c9c807)
+++ project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/ThreeTrackerRepository.kt	(revision 82430523b4a3a2edfc9542a3f8e6f2cf8846cd98)
@@ -2,23 +2,24 @@
 
 import com.zoltanlorinczi.project_retrofit.api.model.LoginRequestBody
 import com.zoltanlorinczi.project_retrofit.api.model.LoginResponse
-import com.zoltanlorinczi.project_retrofit.api.model.ProductsListResponse
+import com.zoltanlorinczi.project_retrofit.api.model.TaskResponse
+import retrofit2.Response
 
 /**
  * Author:  Zoltan Lorinczi
  * Date:    11/8/2021
  */
-class MarketPlaceRepository {
+class ThreeTrackerRepository {
 
     /**
      * 'suspend' keyword means that this function can be blocking.
      * We need to be aware that we can only call them from within a coroutine or an other suspend function!
      */
-    suspend fun login(loginRequestBody: LoginRequestBody): LoginResponse {
-        return RetrofitInstance.marketPlaceApiService.login(loginRequestBody)
+    suspend fun login(loginRequestBody: LoginRequestBody): Response<LoginResponse> {
+        return RetrofitInstance.USER_API_SERVICE.login(loginRequestBody)
     }
 
-    suspend fun getProducts(token: String): ProductsListResponse {
-        return RetrofitInstance.marketPlaceApiService.getProducts(token)
+    suspend fun getTasks(token: String): Response<List<TaskResponse>> {
+        return RetrofitInstance.USER_API_SERVICE.getTasks(token)
     }
 }
\ No newline at end of file
Index: project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/MarketPlaceApiService.kt
===================================================================
--- project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/MarketPlaceApiService.kt	(revision 50220e391a06d9d10fdebce6ef7bd31906c9c807)
+++ project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/UserApiService.kt	(revision 82430523b4a3a2edfc9542a3f8e6f2cf8846cd98)
@@ -2,7 +2,8 @@
 
 import com.zoltanlorinczi.project_retrofit.api.model.LoginRequestBody
 import com.zoltanlorinczi.project_retrofit.api.model.LoginResponse
-import com.zoltanlorinczi.project_retrofit.api.model.ProductsListResponse
+import com.zoltanlorinczi.project_retrofit.api.model.TaskResponse
+import retrofit2.Response
 import retrofit2.http.Body
 import retrofit2.http.GET
 import retrofit2.http.Header
@@ -14,11 +15,11 @@
  * Author:  Zoltan Lorinczi
  * Date:    11/8/2021
  */
-interface MarketPlaceApiService {
+interface UserApiService {
 
     @POST(BackendConstants.LOGIN_URL)
-    suspend fun login(@Body request: LoginRequestBody): LoginResponse
+    suspend fun login(@Body loginRequest: LoginRequestBody): Response<LoginResponse>
 
-    @GET(BackendConstants.GET_PRODUCT_URL)
-    suspend fun getProducts(@Header(BackendConstants.HEADER_TOKEN) token: String): ProductsListResponse
+    @GET(BackendConstants.GET_TASKS_URL)
+    suspend fun getTasks(@Header(BackendConstants.HEADER_TOKEN) token: String): Response<List<TaskResponse>>
 }
\ No newline at end of file
Index: project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/model/LoginRequestBody.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/model/LoginRequestBody.kt	(revision 50220e391a06d9d10fdebce6ef7bd31906c9c807)
+++ project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/model/LoginRequestBody.kt	(revision 82430523b4a3a2edfc9542a3f8e6f2cf8846cd98)
@@ -7,9 +7,8 @@
  * Date:    11/8/2021
  */
 data class LoginRequestBody(
-    @SerializedName("username")
-    var username: String,
-
-    @SerializedName("password")
+    @SerializedName("email")
+    var email: String,
+    @SerializedName("passwordKey")
     var password: String
 )
\ No newline at end of file
Index: project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/model/LoginResponse.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/model/LoginResponse.kt	(revision 50220e391a06d9d10fdebce6ef7bd31906c9c807)
+++ project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/model/LoginResponse.kt	(revision 82430523b4a3a2edfc9542a3f8e6f2cf8846cd98)
@@ -7,26 +7,17 @@
  * Date:    11/8/2021
  */
 data class LoginResponse(
-    @SerializedName("username")
-    var username: String,
-
-    @SerializedName("email")
-    var email: String,
-
-    @SerializedName("phone_number")
-    var phone_number: Int,
-
+    @SerializedName("userId")
+    var userId: Int,
     @SerializedName("token")
     var token: String,
-
-    @SerializedName("creation_time")
-    var creation_time: Long,
-
-    @SerializedName("refresh_time")
-    var refresh_time: Long
+    @SerializedName("deadline")
+    var deadline: Long,
 ) {
     override fun toString(): String {
-        return "LoginResponse(username='$username', email='$email', phone_number=$phone_number," +
-                " token='$token', creation_time=$creation_time, refresh_time=$refresh_time)"
+        return "LoginResponse(" +
+                "userId='$userId'," +
+                " token='$token'," +
+                " deadline=$deadline)"
     }
 }
\ No newline at end of file
Index: project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/model/TaskResponse.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/model/TaskResponse.kt	(revision 82430523b4a3a2edfc9542a3f8e6f2cf8846cd98)
+++ project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/model/TaskResponse.kt	(revision 82430523b4a3a2edfc9542a3f8e6f2cf8846cd98)
@@ -0,0 +1,42 @@
+package com.zoltanlorinczi.project_retrofit.api.model
+
+import com.google.gson.annotations.SerializedName
+
+/**
+ * Author:  Zoltan Lorinczi
+ * Date:    11/8/2021
+ */
+data class TaskResponse(
+    @SerializedName("ID")
+    var id: Int,
+
+    @SerializedName("title")
+    var title: String,
+
+    @SerializedName("description")
+    var description: String,
+
+    @SerializedName("created_time")
+    var createdTime: Long,
+
+    @SerializedName("created_by_user_ID")
+    var createdByUserID: Int,
+
+    @SerializedName("asigned_to_user_ID")
+    var assignedToUserID: Int,
+
+    @SerializedName("priority")
+    var priority: Int,
+
+    @SerializedName("deadline")
+    var deadline: Long,
+
+    @SerializedName("department_ID")
+    var departmentID: Int,
+
+    @SerializedName("status")
+    var status: Int,
+
+    @SerializedName("progress")
+    var progress: String
+)
Index: project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/fragment/ListFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/fragment/ListFragment.kt	(revision 50220e391a06d9d10fdebce6ef7bd31906c9c807)
+++ project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/fragment/ListFragment.kt	(revision 82430523b4a3a2edfc9542a3f8e6f2cf8846cd98)
@@ -1,6 +1,7 @@
 package com.zoltanlorinczi.project_retrofit.fragment
 
 import android.os.Bundle
+import android.util.Log
 import android.view.LayoutInflater
 import android.view.View
 import android.view.ViewGroup
@@ -11,51 +12,60 @@
 import androidx.recyclerview.widget.RecyclerView
 import com.zoltanlorinczi.project_retorfit.R
 import com.zoltanlorinczi.project_retrofit.adapter.MarketDataAdapter
-import com.zoltanlorinczi.project_retrofit.api.MarketPlaceRepository
-import com.zoltanlorinczi.project_retrofit.api.model.ProductResponse
-import com.zoltanlorinczi.project_retrofit.viewmodel.ListViewModel
-import com.zoltanlorinczi.project_retrofit.viewmodel.ListViewModelFactory
+import com.zoltanlorinczi.project_retrofit.api.ThreeTrackerRepository
+import com.zoltanlorinczi.project_retrofit.viewmodel.TasksViewModel
+import com.zoltanlorinczi.project_retrofit.viewmodel.TasksViewModelFactory
 
 /**
  * Author:  Zoltan Lorinczi
  * Date:    12/2/2021
  */
-class ListFragment : Fragment(R.layout.fragment_list), MarketDataAdapter.OnItemClickListener, MarketDataAdapter.OnItemLongClickListener {
+class ListFragment : Fragment(R.layout.fragment_list), MarketDataAdapter.OnItemClickListener,
+    MarketDataAdapter.OnItemLongClickListener {
 
-    lateinit var listViewModel: ListViewModel
-    private lateinit var recycler_view: RecyclerView
+    companion object {
+        private val TAG: String = javaClass.simpleName
+    }
+
+    private lateinit var tasksViewModel: TasksViewModel
+    private lateinit var recyclerView: RecyclerView
     private lateinit var adapter: MarketDataAdapter
 
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
-        val factory = ListViewModelFactory(MarketPlaceRepository())
-        listViewModel = ViewModelProvider(this, factory).get(ListViewModel::class.java)
+        val factory = TasksViewModelFactory(ThreeTrackerRepository())
+        tasksViewModel = ViewModelProvider(this, factory)[TasksViewModel::class.java]
     }
 
-    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {
+    override fun onCreateView(
+        inflater: LayoutInflater,
+        container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
         // Inflate the layout for this fragment
         val view = inflater.inflate(R.layout.fragment_list, container, false)
-        recycler_view = view.findViewById(R.id.recycler_view)
+        recyclerView = view.findViewById(R.id.recycler_view)
         setupRecyclerView()
-        listViewModel.products.observe(viewLifecycleOwner) {
-            adapter.setData(listViewModel.products.value as ArrayList<ProductResponse>)
-            adapter.notifyDataSetChanged()
+        tasksViewModel.products.observe(viewLifecycleOwner) {
+//            adapter.setData(tasksViewModel.products.value as ArrayList<TaskResponse>)
+//            adapter.notifyDataSetChanged()
+            Log.d(TAG, "Tasks list = $it")
         }
 
         return view
     }
 
     private fun setupRecyclerView() {
-        adapter = MarketDataAdapter(ArrayList<ProductResponse>(), this.requireContext(), this, this)
-        recycler_view.adapter = adapter
-        recycler_view.layoutManager = LinearLayoutManager(this.context)
-        recycler_view.addItemDecoration(
+        adapter = MarketDataAdapter(ArrayList(), this.requireContext(), this, this)
+        recyclerView.adapter = adapter
+        recyclerView.layoutManager = LinearLayoutManager(this.context)
+        recyclerView.addItemDecoration(
             DividerItemDecoration(
                 activity,
                 DividerItemDecoration.VERTICAL
             )
         )
-        recycler_view.setHasFixedSize(true)
+        recyclerView.setHasFixedSize(true)
     }
 
     override fun onItemClick(position: Int) {
Index: project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/fragment/LoginFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/fragment/LoginFragment.kt	(revision 50220e391a06d9d10fdebce6ef7bd31906c9c807)
+++ project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/fragment/LoginFragment.kt	(revision 82430523b4a3a2edfc9542a3f8e6f2cf8846cd98)
@@ -12,7 +12,7 @@
 import androidx.navigation.fragment.findNavController
 import com.zoltanlorinczi.project_retorfit.R
 import com.zoltanlorinczi.project_retrofit.App
-import com.zoltanlorinczi.project_retrofit.api.MarketPlaceRepository
+import com.zoltanlorinczi.project_retrofit.api.ThreeTrackerRepository
 import com.zoltanlorinczi.project_retrofit.manager.SharedPreferencesManager
 import com.zoltanlorinczi.project_retrofit.viewmodel.LoginViewModel
 import com.zoltanlorinczi.project_retrofit.viewmodel.LoginViewModelFactory
@@ -22,24 +22,37 @@
  * Date:    11/12/2021
  */
 class LoginFragment : Fragment() {
-    val TAG: String = javaClass.simpleName
+
+    companion object {
+        private val TAG: String = javaClass.simpleName
+    }
 
     private lateinit var loginViewModel: LoginViewModel
 
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
-        val factory = LoginViewModelFactory(MarketPlaceRepository())
-        loginViewModel = ViewModelProvider(this, factory).get(LoginViewModel::class.java)
+        val factory = LoginViewModelFactory(ThreeTrackerRepository())
+        loginViewModel = ViewModelProvider(this, factory)[LoginViewModel::class.java]
     }
 
-    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {
+    override fun onCreateView(
+        inflater: LayoutInflater,
+        container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
         val view = inflater.inflate(R.layout.fragment_login, container, false)
 
         val userNameEditText: EditText = view.findViewById(R.id.edittext_name_login_fragment)
         val passwordEditText: EditText = view.findViewById(R.id.edittext_password_login_fragment)
         val button: Button = view.findViewById(R.id.button_login_fragment)
 
-        Log.d(TAG, "token = " + App.sharedPreferences.getStringValue(SharedPreferencesManager.KEY_TOKEN, "Empty token!"))
+        Log.d(
+            TAG,
+            "token = " + App.sharedPreferences.getStringValue(
+                SharedPreferencesManager.KEY_TOKEN,
+                "Empty token!"
+            )
+        )
 
         button.setOnClickListener {
             loginViewModel.username = userNameEditText.text.toString()
@@ -48,7 +61,7 @@
             loginViewModel.login()
 
             loginViewModel.isSuccessful.observe(this.viewLifecycleOwner) {
-                Log.d(TAG, "Logged in successfully = " + it)
+                Log.d(TAG, "Logged in successfully = $it")
                 if (it) {
                     findNavController().navigate(R.id.action_loginFragment_to_listFragment)
                 }
Index: project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/viewmodel/LoginViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/viewmodel/LoginViewModel.kt	(revision 50220e391a06d9d10fdebce6ef7bd31906c9c807)
+++ project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/viewmodel/LoginViewModel.kt	(revision 82430523b4a3a2edfc9542a3f8e6f2cf8846cd98)
@@ -5,7 +5,7 @@
 import androidx.lifecycle.ViewModel
 import androidx.lifecycle.viewModelScope
 import com.zoltanlorinczi.project_retrofit.App
-import com.zoltanlorinczi.project_retrofit.api.MarketPlaceRepository
+import com.zoltanlorinczi.project_retrofit.api.ThreeTrackerRepository
 import com.zoltanlorinczi.project_retrofit.api.model.LoginRequestBody
 import com.zoltanlorinczi.project_retrofit.manager.SharedPreferencesManager
 import kotlinx.coroutines.Dispatchers
@@ -16,7 +16,7 @@
  * Author:  Zoltan Lorinczi
  * Date:    11/8/2021
  */
-class LoginViewModel(private val repository: MarketPlaceRepository) : ViewModel() {
+class LoginViewModel(private val repository: ThreeTrackerRepository) : ViewModel() {
 
     val TAG: String = javaClass.simpleName
 
@@ -35,13 +35,23 @@
 
     private suspend fun executeLogin(requestBody: LoginRequestBody) {
         try {
-            val result = withContext(Dispatchers.IO) {
+            val response = withContext(Dispatchers.IO) {
                 repository.login(requestBody)
             }
-            token.value = result.token
-            App.sharedPreferences.putStringValue(SharedPreferencesManager.KEY_TOKEN, result.token)
-            isSuccessful.value = true
-            Log.d(TAG, "LoginViewModel - login response: $result")
+
+            if (response.isSuccessful) {
+                Log.d(TAG, "Login response: ${response.body()}")
+
+                val responseToken = response.body()?.token
+                responseToken?.let {
+                    token.value = it
+                    App.sharedPreferences.putStringValue(SharedPreferencesManager.KEY_TOKEN, it)
+                    isSuccessful.value = true
+                }
+            } else {
+                Log.d(TAG, "Login error response: ${response.message()}")
+                isSuccessful.value = false
+            }
         } catch (e: Exception) {
             Log.d(TAG, "LoginViewModel - login() failed with exception: ${e.message}")
             isSuccessful.value = false
Index: project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/viewmodel/LoginViewModelFactory.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/viewmodel/LoginViewModelFactory.kt	(revision 50220e391a06d9d10fdebce6ef7bd31906c9c807)
+++ project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/viewmodel/LoginViewModelFactory.kt	(revision 82430523b4a3a2edfc9542a3f8e6f2cf8846cd98)
@@ -2,13 +2,13 @@
 
 import androidx.lifecycle.ViewModel
 import androidx.lifecycle.ViewModelProvider
-import com.zoltanlorinczi.project_retrofit.api.MarketPlaceRepository
+import com.zoltanlorinczi.project_retrofit.api.ThreeTrackerRepository
 
 /**
  * Author:  Zoltan Lorinczi
  * Date:    11/8/2021
  */
-class LoginViewModelFactory(private val repository: MarketPlaceRepository) : ViewModelProvider.Factory {
+class LoginViewModelFactory(private val repository: ThreeTrackerRepository) : ViewModelProvider.Factory {
 
     override fun <T : ViewModel> create(modelClass: Class<T>): T {
         return LoginViewModel(repository) as T
Index: project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/viewmodel/TasksViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/viewmodel/TasksViewModel.kt	(revision 82430523b4a3a2edfc9542a3f8e6f2cf8846cd98)
+++ project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/viewmodel/TasksViewModel.kt	(revision 82430523b4a3a2edfc9542a3f8e6f2cf8846cd98)
@@ -0,0 +1,54 @@
+package com.zoltanlorinczi.project_retrofit.viewmodel
+
+import android.util.Log
+import androidx.lifecycle.MutableLiveData
+import androidx.lifecycle.ViewModel
+import androidx.lifecycle.viewModelScope
+import com.zoltanlorinczi.project_retrofit.App
+import com.zoltanlorinczi.project_retrofit.api.ThreeTrackerRepository
+import com.zoltanlorinczi.project_retrofit.api.model.TaskResponse
+import com.zoltanlorinczi.project_retrofit.manager.SharedPreferencesManager
+import kotlinx.coroutines.launch
+
+/**
+ * Author:  Zoltan Lorinczi
+ * Date:    12/6/2021
+ */
+class TasksViewModel(private val repository: ThreeTrackerRepository) : ViewModel() {
+
+    val TAG: String = javaClass.simpleName
+
+    var products: MutableLiveData<List<TaskResponse>> = MutableLiveData()
+
+    init {
+        getProducts()
+    }
+
+    private fun getProducts() {
+        viewModelScope.launch {
+            try {
+                val token: String? = App.sharedPreferences.getStringValue(
+                    SharedPreferencesManager.KEY_TOKEN,
+                    "Empty token!"
+                )
+                val response = token?.let {
+                    repository.getTasks(it)
+                }
+
+                if (response?.isSuccessful == true) {
+                    Log.d(TAG, "Get tasks response: ${response.body()}")
+
+                    val tasksList = response.body()
+                    tasksList?.let {
+                        products.value = tasksList
+                    }
+                } else {
+                    Log.d(TAG, "Get tasks error response: ${response?.errorBody()}")
+                }
+
+            } catch (e: Exception) {
+                Log.d(TAG, "TasksViewModel - getTasks() failed with exception: ${e.message}")
+            }
+        }
+    }
+}
\ No newline at end of file
Index: project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/viewmodel/ListViewModelFactory.kt
===================================================================
--- project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/viewmodel/ListViewModelFactory.kt	(revision 50220e391a06d9d10fdebce6ef7bd31906c9c807)
+++ project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/viewmodel/TasksViewModelFactory.kt	(revision 82430523b4a3a2edfc9542a3f8e6f2cf8846cd98)
@@ -2,15 +2,15 @@
 
 import androidx.lifecycle.ViewModel
 import androidx.lifecycle.ViewModelProvider.Factory
-import com.zoltanlorinczi.project_retrofit.api.MarketPlaceRepository
+import com.zoltanlorinczi.project_retrofit.api.ThreeTrackerRepository
 
 /**
  * Author:  Zoltan Lorinczi
  * Date:    12/6/2021
  */
-class ListViewModelFactory(private val repository: MarketPlaceRepository) : Factory {
+class TasksViewModelFactory(private val repository: ThreeTrackerRepository) : Factory {
 
     override fun <T : ViewModel> create(modelClass: Class<T>): T {
-        return ListViewModel(repository) as T
+        return TasksViewModel(repository) as T
     }
 }
\ No newline at end of file
Index: project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/model/ProductResponse.kt
===================================================================
--- project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/model/ProductResponse.kt	(revision 50220e391a06d9d10fdebce6ef7bd31906c9c807)
+++ project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/model/ProductResponse.kt	(revision 50220e391a06d9d10fdebce6ef7bd31906c9c807)
@@ -1,46 +0,0 @@
-package com.zoltanlorinczi.project_retrofit.api.model
-
-import android.media.Image
-import com.google.gson.annotations.SerializedName
-
-/**
- * Author:  Zoltan Lorinczi
- * Date:    11/8/2021
- */
-data class ProductResponse(
-    @SerializedName("rating")
-    val rating: Double,
-
-    @SerializedName("amount_type")
-    val amountType: String,
-
-    @SerializedName("price_type")
-    val priceType: String,
-
-    @SerializedName("product_id")
-    val productId: String,
-
-    @SerializedName("username")
-    val username: String,
-
-    @SerializedName("is_active")
-    val isActive: Boolean,
-
-    @SerializedName("price_per_unit")
-    val pricePerUnit: String,
-
-    @SerializedName("units")
-    val units: String,
-
-    @SerializedName("description")
-    val description: String,
-
-    @SerializedName("title")
-    val title: String,
-
-    @SerializedName("images")
-    val images: List<Image>,
-
-    @SerializedName("creation_time")
-    val creationTime: Long
-)
Index: project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/model/ProductsListResponse.kt
===================================================================
--- project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/model/ProductsListResponse.kt	(revision 50220e391a06d9d10fdebce6ef7bd31906c9c807)
+++ project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/api/model/ProductsListResponse.kt	(revision 50220e391a06d9d10fdebce6ef7bd31906c9c807)
@@ -1,18 +0,0 @@
-package com.zoltanlorinczi.project_retrofit.api.model
-
-import com.google.gson.annotations.SerializedName
-
-/**
- * Author:  Zoltan Lorinczi
- * Date:    11/23/2021
- */
-data class ProductsListResponse(
-    @SerializedName("item_count")
-    val itemCount: Int,
-
-    @SerializedName("products")
-    val products: List<ProductResponse>,
-
-    @SerializedName("timestamp")
-    val timeStamp: Long
-)
\ No newline at end of file
Index: project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/viewmodel/ListViewModel.kt
===================================================================
--- project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/viewmodel/ListViewModel.kt	(revision 50220e391a06d9d10fdebce6ef7bd31906c9c807)
+++ project_retrofit.app/src/main/java/com/zoltanlorinczi/project_retrofit/viewmodel/ListViewModel.kt	(revision 50220e391a06d9d10fdebce6ef7bd31906c9c807)
@@ -1,38 +0,0 @@
-package com.zoltanlorinczi.project_retrofit.viewmodel
-
-import android.util.Log
-import androidx.lifecycle.MutableLiveData
-import androidx.lifecycle.ViewModel
-import androidx.lifecycle.viewModelScope
-import com.zoltanlorinczi.project_retrofit.App
-import com.zoltanlorinczi.project_retrofit.api.MarketPlaceRepository
-import com.zoltanlorinczi.project_retrofit.api.model.ProductResponse
-import com.zoltanlorinczi.project_retrofit.manager.SharedPreferencesManager
-import kotlinx.coroutines.launch
-
-/**
- * Author:  Zoltan Lorinczi
- * Date:    12/6/2021
- */
-class ListViewModel(private val repository: MarketPlaceRepository) : ViewModel() {
-
-    val TAG: String = javaClass.simpleName
-
-    var products: MutableLiveData<List<ProductResponse>> = MutableLiveData()
-
-    init {
-        getProducts()
-    }
-
-    fun getProducts() {
-        viewModelScope.launch {
-            try {
-                val token: String? = App.sharedPreferences.getStringValue(SharedPreferencesManager.KEY_TOKEN, "Empty token!")
-                val result = token?.let { repository.getProducts(it) }
-                products.value = result?.products
-            } catch (e: Exception) {
-                Log.d(TAG, "ListViewModel - getProducts() failed with exception: ${e.message}")
-            }
-        }
-    }
-}
\ No newline at end of file
